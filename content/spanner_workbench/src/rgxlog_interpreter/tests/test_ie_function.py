# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../../nbs/unit_tests/27_test_ie_function.ipynb.

# %% auto 0
__all__ = ['sample_ie_func1', 'sample_ie_func2', 'dynamic_output_arity_func', 'test_ie_function_execution',
           'test_get_input_types', 'test_get_output_types_static', 'test_get_output_types_dynamic']

# %% ../../../../nbs/unit_tests/27_test_ie_function.ipynb 1
import pytest
from ..src.rgxlog.engine.datatypes.primitive_types import Span, DataTypes, DataTypeMapping
from ..src.rgxlog.engine.ie_function import IEFunction
from typing import Callable, List, Union, Sequence

def sample_ie_func1(x: int, y: str):
    yield (x, y, x + 1)

def sample_ie_func2(x: int):
    yield x * 2

def dynamic_output_arity_func(n: int) -> Sequence[DataTypes]:
    return [DataTypes.integer] * n

def test_ie_function_execution():
    ie_func = IEFunction(sample_ie_func1, [DataTypes.integer, DataTypes.string], [DataTypes.integer, DataTypes.string, DataTypes.integer])
    result = list(ie_func.ie_function(1, "test"))
    assert result == [(1, "test", 2)]

def test_get_input_types():
    ie_func = IEFunction(sample_ie_func1, [DataTypes.integer, DataTypes.string], [DataTypes.integer])
    assert ie_func.get_input_types() == [DataTypes.integer, DataTypes.string]

def test_get_output_types_static():
    ie_func = IEFunction(sample_ie_func1, [DataTypes.integer, DataTypes.string], [DataTypes.integer, DataTypes.string, DataTypes.integer])
    assert ie_func.get_output_types(5) == [DataTypes.integer, DataTypes.string ,DataTypes.integer, DataTypes.string, DataTypes.integer]

def test_get_output_types_dynamic():
    ie_func = IEFunction(sample_ie_func2, [DataTypes.integer], dynamic_output_arity_func)
    assert ie_func.get_output_types(4) == [DataTypes.integer,DataTypes.integer, DataTypes.integer, DataTypes.integer]
